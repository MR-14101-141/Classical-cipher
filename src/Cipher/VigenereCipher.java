/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Cipher;

import javax.swing.JOptionPane;

/**
 *
 * @author AngleOfPeace
 */
public class VigenereCipher extends javax.swing.JFrame {

    /**
     * Creates new form VigenereCipher
     */
    public VigenereCipher() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        Encode = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        Decode = new javax.swing.JTextArea();
        Key = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        Encrypt = new javax.swing.JButton();
        Decrypt = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        KeyGenerated = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        Encode.setColumns(20);
        Encode.setRows(5);
        Encode.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                EncodeMouseClicked(evt);
            }
        });
        Encode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                EncodeKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(Encode);

        jLabel1.setText("Encode");

        jLabel2.setText("Decode");

        Decode.setColumns(20);
        Decode.setRows(5);
        Decode.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                DecodeMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(Decode);

        Key.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                KeyKeyReleased(evt);
            }
        });

        jLabel3.setText("Key");

        Encrypt.setText("Encrypt");
        Encrypt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EncryptActionPerformed(evt);
            }
        });

        Decrypt.setText("Decrypt");
        Decrypt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DecryptActionPerformed(evt);
            }
        });

        jLabel4.setText("Key generation");

        KeyGenerated.setColumns(20);
        KeyGenerated.setRows(5);
        jScrollPane4.setViewportView(KeyGenerated);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(32, 32, 32)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(Encrypt)
                            .addComponent(jLabel3)
                            .addComponent(Key, javax.swing.GroupLayout.DEFAULT_SIZE, 233, Short.MAX_VALUE)
                            .addComponent(Decrypt)
                            .addComponent(jLabel4)
                            .addComponent(jScrollPane4))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel3))
                .addGap(4, 4, 4)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(14, 14, 14)
                        .addComponent(jLabel2))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(Key, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(5, 5, 5)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(4, 4, 4)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(Encrypt)
                        .addGap(18, 18, 18)
                        .addComponent(Decrypt)))
                .addContainerGap(14, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void KeyKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_KeyKeyReleased
        
        
        String key = Key.getText();
        String encode = Encode.getText();
        String decode = Decode.getText();
        
        if(encode.equals("")&&decode.equals(""))
        {
            Key.setText("");
            JOptionPane.showMessageDialog(null, "chưa nhập encode hoặc decode!!!?? ");
        }
        else if(encode.equals("")){
    int x = decode.length(); 
  
    for (int i = 0; ; i++) 
    { 
        if (x == i) 
            i = 0; 
        if (key.length() == decode.length()) 
            break; 
        key+=(key.charAt(i)); 
    }    
    KeyGenerated.setText(key);
                                    } 
        else
        {
            int y = encode.length(); 
  
    for (int j = 0; ; j++) 
    { 
        if (y == j) 
            j = 0; 
        if (key.length() == encode.length()) 
            break; 
        key+=(key.charAt(j)); 
    }  
    KeyGenerated.setText(key);
        }

    }//GEN-LAST:event_KeyKeyReleased

    private void EncryptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EncryptActionPerformed
        String key = KeyGenerated.getText().toUpperCase();
        String decode ="";
        String encode = Encode.getText().toUpperCase();
                
        for (int i = 0; i < encode.length(); i++)
        {
            if ((int)encode.charAt(i) == 32){
                decode += (char)32;
                    Decode.setText(decode);   
            }else{
        decode += (char) (((encode.charAt(i) +  key.charAt(i)) %26)+'A'); 
            }
        }
        
        Decode.setText(decode); 
    }//GEN-LAST:event_EncryptActionPerformed

    private void DecryptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DecryptActionPerformed
        String key = KeyGenerated.getText().toUpperCase();
        String encode = "";
        String decode =Decode.getText().toUpperCase();
        
        for (int i = 0; i < decode.length(); i++)
    { 
        if((int)decode.charAt(i) == 32){
                    encode += (char)32;
                    Encode.setText(encode);
                } else {
        encode += (char)((((decode.charAt(i) -  key.charAt(i)) + 26) %26)+'A'); 
    }}
        Encode.setText(encode);
    }//GEN-LAST:event_DecryptActionPerformed

    private void EncodeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_EncodeKeyPressed
        
    }//GEN-LAST:event_EncodeKeyPressed

    private void EncodeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_EncodeMouseClicked
        Key.setText("");
        KeyGenerated.setText("");
        Decode.setText("");
    }//GEN-LAST:event_EncodeMouseClicked

    private void DecodeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DecodeMouseClicked
        Key.setText("");
        KeyGenerated.setText("");
        Encode.setText("");
    }//GEN-LAST:event_DecodeMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VigenereCipher.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VigenereCipher.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VigenereCipher.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VigenereCipher.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VigenereCipher().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea Decode;
    private javax.swing.JButton Decrypt;
    private javax.swing.JTextArea Encode;
    private javax.swing.JButton Encrypt;
    private javax.swing.JTextField Key;
    private javax.swing.JTextArea KeyGenerated;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    // End of variables declaration//GEN-END:variables
}
